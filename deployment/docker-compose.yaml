version: '3'

services:
  my-app:
    build:
      context: .
      dockerfile: deployment/dockerfiles/dockerfile-local
    working_dir: /go/src/github.com/ralali/rll-url-shortener
    container_name: my-app
    hostname: my-app
    networks:
      - code-network
    volumes:
      - .:/go/src/github.com/ralali/rll-url-shortener
    ports:
      - 8081:8081
    depends_on:
      - mariadb
      - kafka1

  redis:
    image: redis:4
    container_name: redis
    hostname: redis
    ports:
      - 6479:6379
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
    networks:
      - code-network

  mariadb:
    image: mariadb/server:10.3
    restart: always
    container_name: mariadb
    hostname: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: brainlabs
      MARIADB_ROOT_HOST: "%"
      MARIADB_USER: admin
      MARIADB_PASSWORD: brainlabs
      TZ: "Asia/Jakarta"
    volumes:
      - mariadb:/var/lib/mysql
    ports:
      - 3307:3306
    networks:
      - code-network

  elastic:
     image: docker.elastic.co/elasticsearch/elasticsearch:6.6.2
     container_name: elastic
     restart: always
     hostname: elastic
     environment:
       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
       - "discovery.type=single-node"
     ports:
       - 9300:9200
     ulimits:
       memlock:
         soft: -1
         hard: -1
     networks:
       - code-network
     volumes:
       - elastic:/usr/share/elasticsearch/data
     depends_on:
       - mariadb

  kibana:
     image: docker.elastic.co/kibana/kibana:6.6.2
     container_name: kibana
     hostname: kibana
     restart: always
     environment:
       ELASTICSEARCH_HOSTS: http://elastic:9200
       ELASTICSEARCH_URL: http://elastic:9200
       SERVER_NAME: kibana.local
     depends_on:
       - mariadb
       - elastic
     networks:
       - code-network
     ports:
       - 5601:5601

  mongo:
    image: mongo:4.2
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      TZ: "Asia/Jakarta"
    volumes:
      - mongo:/data/db
    ports:
      - 28017:27017

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 9081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret

  zk1:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zk1
    restart: always
    container_name: zk1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      # ZOOKEEPER_SERVERS: zk1:2888:3888;zk2:2888:3888
      TZ: "Asia/Jakarta"
    networks:
      - code-network

  kafka1:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zk1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zk1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zk1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'flase'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      TZ: "Asia/Jakarta"
    networks:
      - code-network


  kafka_manager:
    image: hlebalbau/kafka-manager:3.0.0.5
    hostname: kafka-manager
    restart: always
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zk1:2181"
      APPLICATION_SECRET: "brainlabs"
      TZ: "Asia/Jakarta"
    command: -Dpidfile.path=/dev/null
    depends_on:
      - zk1
      - kafka1
    networks:
      - code-network

  kafka-webview:
    image: sourcelaborg/kafka-webview:2.6.0
    hostname: kafka-webview
    container_name: kafka-webview
    restart: always
    ports:
      - "9001:8080"
    volumes:
      - kafka-web:/app/data
    depends_on:
      - zk1
      - kafka1
    environment:
      TZ: "Asia/Jakarta"
    networks:
      - code-network

volumes:
  mongo:
    driver: local
  elastic:
    driver: local
  mariadb:
    driver: local
  kafka:
    driver: local
  kafka-web:
    driver: local

networks:
  code-network:
    driver: bridge